node n1 {
    type router
    model router
    network-config {
	hostname r1
	!
	interface eth0
	 ip address 10.0.0.1/24
	 ipv6 address 2001:0::1/64
	!
	interface eth1
	 ip address 10.0.2.1/24
	 ipv6 address 2001:2::1/64
	!
    }
    canvas c1
    iconcoords {297.0 236.0}
    labelcoords {315.0 213.0}
    interface-peer {eth1 n2}
    interface-peer {eth0 n8}
    services {OSPFv2 OSPFv3 zebra NAT IPForward}
    custom-config {
	custom-config-id service:NAT
	custom-command NAT
	config {
	files=('nat.sh', )
	}
    }
    custom-config {
	custom-config-id service:NAT:nat.sh
	custom-command nat.sh
	config {
	#!/bin/sh
	# generated by security.py
	
	# NAT out the eth1 interface
	iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
	iptables -A FORWARD -i eth1 -m state --state RELATED,ESTABLISHED -j ACCEPT
	iptables -A FORWARD -i eth1 -j DROP
	
	}
    }
}

node n2 {
    type router
    model router
    network-config {
	hostname r2
	!
	interface eth2
	 ip address 10.0.7.1/24
	 ipv6 address 2001:7::1/64
	!
	interface eth0
	 ip address 10.0.2.2/24
	 ipv6 address 2001:2::2/64
	!
    }
    canvas c1
    iconcoords {601.0 209.0}
    labelcoords {588.0 253.0}
    interface-peer {eth0 n1}
    interface-peer {eth2 n3}
}

node n3 {
    type router
    model router
    network-config {
	hostname r3
	!
	interface eth2
	 ip address 10.0.7.2/24
	 ipv6 address 2001:7::2/64
	!
	interface eth0
	 ip address 10.0.3.1/24
	 ipv6 address 2001:3::1/64
	!
    }
    canvas c1
    iconcoords {277.0 401.0}
    labelcoords {297.0 379.0}
    interface-peer {eth0 n4}
    interface-peer {eth2 n2}
}

node n4 {
    type router
    model router
    network-config {
	hostname r4
	!
	interface eth1
	 ip address 10.0.3.2/24
	 ipv6 address 2001:3::2/64
	!
	interface eth0
	 ip address 10.0.1.1/24
	 ipv6 address 2001:1::1/64
	!
    }
    canvas c1
    iconcoords {573.0 429.0}
    labelcoords {552.0 480.0}
    interface-peer {eth0 n5}
    interface-peer {eth1 n3}
}

node n5 {
    type router
    model host
    network-config {
	hostname vpnserver
	!
	interface eth1
	 ipv6 address 2001:6::10/64
	 ip address 10.0.6.1/24
	!
	interface eth0
	 ip address 10.0.1.10/24
	 ipv6 address 2001:1::10/64
	!
    }
    canvas c1
    iconcoords {681.0 600.0}
    labelcoords {679.0 647.0}
    interface-peer {eth0 n4}
    interface-peer {eth1 n7}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('server.key', 'server.crt', 'server.conf', 'ca.crt', 'dh.pem', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:ca.crt
	custom-command ca.crt
	config {
	-----BEGIN CERTIFICATE-----
	MIIDMDCCAhigAwIBAgIULPIkQnJS+rJYX8Lpp9fBGVxms9wwDQYJKoZIhvcNAQEL
	BQAwDTELMAkGA1UEAwwCUkMwHhcNMjIwMTE4MTUyMzU3WhcNMzIwMTE2MTUyMzU3
	WjANMQswCQYDVQQDDAJSQzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
	ALcd3pZmF/7K4I8x6urc9+n/7DyP2JJhfPhH7vxeKKXSZ76lgpGvgTwyPFS3ORSR
	w4kZD7EsdnRGv+fOAIw76Cw+pue0oEAWb5yotlAYhGKeD5gbR4OQmQmk02VpnfWe
	Rs4jmRUB2PgOdA8ZWo6HXs4ZV6ULzR4ZybPGH0Hmty/+ljea1yzg7WodrYJ7C3Oz
	l3tfhZ3lVFzkk78E3oFg/DIaY5dNE3JXrugX9VPmU2XGPziUc/4Oc+QszSYElI9k
	eKv6DZ2Thbh/jRT04Du+0VYcUqtAYjDOT/XQT30Ef6HYxsKKsWP28H0t99ff1gbg
	bw8XA5QBmfPGLs2NwWzmf90CAwEAAaOBhzCBhDAdBgNVHQ4EFgQUV4mH8kvx3Cpv
	lOMQpLfIjQNjyIAwSAYDVR0jBEEwP4AUV4mH8kvx3CpvlOMQpLfIjQNjyIChEaQP
	MA0xCzAJBgNVBAMMAlJDghQs8iRCclL6slhfwumn18EZXGaz3DAMBgNVHRMEBTAD
	AQH/MAsGA1UdDwQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAQEAhpUxODAGxJlFA38b
	tExM+NkhqSK9j7IIdA07hFAvzhPDx5wsg6zbqu10kyeW5l4m0eisdReau9Jwtf54
	RHLBrjofYZCeResG9iEHCQ7jEzokrpVADzvcXBjXRkTFKK1dm8SjyI81seBD3DPr
	RR2yx8IAvVSso7G08724A6OhbFMwZCTWQNBdk2GJlFzMYvjisCcieYqR1PMV0s7B
	QPMVd+lcDAJny8iTb9SBh6GLB7uszPA1k23dpOMIx/P/cs66pC2x3FIJnCljcmDT
	YdbD7/4NQ6NsUQTCHzh8fQ8OX+h2b8g/NKYPxmdnIhooQ7N9n7ZG74/u13WokGF0
	bCDtew==
	-----END CERTIFICATE-----
	}
    }
    custom-config {
	custom-config-id service:UserDefined:dh.pem
	custom-command dh.pem
	config {
	-----BEGIN DH PARAMETERS-----
	MIIBCAKCAQEAxJw0D3nfFhZFcZdPM4FSMootnrDz+7Ly7KdTehHf+axuLw/hqCnw
	MA9NNU6HHAfzsYBc4gnsxLhINRPtefbcz3vM0JO8FMrGgBzmE80LNBp5kqqBIUOB
	4aX/ZUeSG7SHdBPdDNVoNhU1vW6Uh76NcpPcdo1xsAdU8QsMDN35AaKLP4Q1xHji
	CxafpvGxSSLsovyksttMOS6nDKVeHswhbDu9ScKo9z2L7HidA90qR8cZrXGffOQx
	/XppMIo9aQI0jQX3vGC++/bgAbNsnsHt9jsFc2srcRxgoh59BJakQfAH7y2ZiDvy
	kYk1lG1g4PF+dkUic4AxWJFMIz7xeK0umwIBAg==
	-----END DH PARAMETERS-----
	}
    }
    custom-config {
	custom-config-id service:UserDefined:server.crt
	custom-command server.crt
	config {
	Certificate:
		Data:
			Version: 3 (0x2)
			Serial Number:
				48:9d:aa:91:bb:4b:cd:55:b8:a0:ef:6a:b6:84:ea:40
			Signature Algorithm: sha256WithRSAEncryption
			Issuer: CN=RC
			Validity
				Not Before: Jan 18 15:29:09 2022 GMT
				Not After : Jan  2 15:29:09 2025 GMT
			Subject: CN=server
			Subject Public Key Info:
				Public Key Algorithm: rsaEncryption
					RSA Public-Key: (2048 bit)
					Modulus:
						00:b3:b5:d4:0f:24:5a:cc:19:2c:2b:31:f8:4c:6e:
						bf:c8:b0:06:02:0b:d7:d6:47:20:32:45:ee:5f:6d:
						8f:97:e4:ce:69:97:44:f8:a1:0c:63:25:07:5b:0a:
						af:e3:f7:c0:8e:35:6b:ae:a4:94:f1:98:00:29:75:
						48:4c:2b:cc:9f:a7:1c:c8:4b:2b:27:19:0b:4c:c6:
						65:51:a5:ab:f8:37:a3:5f:69:f0:dd:7a:49:b7:49:
						c0:cd:4c:c9:bd:eb:0e:02:1f:5f:5e:2c:d3:21:07:
						17:5c:77:87:63:94:2e:b3:6a:07:11:fe:3c:1c:06:
						80:9a:a0:9e:67:4e:e5:71:dd:3c:df:75:df:f7:6e:
						5c:22:7c:59:4e:a0:d1:80:90:79:50:03:7c:22:45:
						90:14:d6:77:ef:d3:7c:8c:0b:05:f1:c4:19:37:fb:
						d3:0b:22:e9:72:67:ca:98:3b:92:b0:3f:2c:a6:1f:
						8b:7d:d4:3b:5f:fe:53:19:4b:c3:d1:cb:ce:cf:91:
						db:3d:a1:d9:0b:18:64:37:b0:ae:ef:c2:e1:17:16:
						fc:a0:04:65:30:9c:03:a4:e5:d9:28:57:03:ed:b6:
						ba:31:6e:a1:1f:54:5a:45:f6:16:01:07:89:49:12:
						80:0d:4c:e1:63:b0:a5:03:83:e4:82:a4:14:9c:25:
						53:1b
					Exponent: 65537 (0x10001)
			X509v3 extensions:
				X509v3 Basic Constraints: 
					CA:FALSE
				X509v3 Subject Key Identifier: 
					3A:C2:3B:7B:EE:17:74:A0:61:A9:A5:32:D4:74:1D:33:10:9B:68:D9
				X509v3 Authority Key Identifier: 
					keyid:57:89:87:F2:4B:F1:DC:2A:6F:94:E3:10:A4:B7:C8:8D:03:63:C8:80
					DirName:/CN=RC
					serial:2C:F2:24:42:72:52:FA:B2:58:5F:C2:E9:A7:D7:C1:19:5C:66:B3:DC
	
				X509v3 Extended Key Usage: 
					TLS Web Server Authentication
				X509v3 Key Usage: 
					Digital Signature, Key Encipherment
				X509v3 Subject Alternative Name: 
					DNS:server
		Signature Algorithm: sha256WithRSAEncryption
			7a:60:d1:d3:b9:2f:9b:8f:73:8f:a1:b1:f0:d1:4e:1f:4a:76:
			74:b7:c4:30:40:2f:b7:45:92:e7:3a:68:e5:42:30:cd:e3:a1:
			74:bf:39:f7:e3:4e:f0:f8:22:5e:75:53:53:d4:bc:a2:3d:47:
			dd:45:a9:44:5d:e5:6f:4f:fd:76:39:9b:31:99:f3:f7:c5:75:
			5e:0b:c1:f9:fa:70:1b:ac:30:52:8d:97:ca:81:d8:6c:2e:79:
			66:2f:27:4d:d8:fc:75:af:45:e0:bd:fc:c3:57:32:17:be:dd:
			9c:a6:6c:2c:e0:c5:4b:5a:8a:b4:0b:6b:e1:ad:39:17:76:f9:
			d3:26:6b:31:76:0d:54:32:1e:9a:d4:2b:87:d9:b0:e5:13:f0:
			97:38:74:f5:0d:78:b0:6e:d3:2b:30:43:2d:3b:26:5a:6f:19:
			42:25:b9:80:60:a0:bc:6a:dc:ae:ce:75:c9:23:34:aa:c3:fb:
			e3:cb:6c:e5:7a:4b:18:cb:70:a7:a4:19:3c:fc:16:ef:75:59:
			f4:2d:f5:6c:e3:70:9e:32:4d:df:13:13:60:a9:9e:93:d5:d5:
			06:89:ad:c5:2c:ee:3e:eb:93:1b:ca:c3:31:31:15:17:ab:24:
			90:e7:3e:5f:c2:cf:42:b2:a1:ac:b0:26:87:fb:3f:a0:27:ae:
			cd:c5:e1:4d
	-----BEGIN CERTIFICATE-----
	MIIDVTCCAj2gAwIBAgIQSJ2qkbtLzVW4oO9qtoTqQDANBgkqhkiG9w0BAQsFADAN
	MQswCQYDVQQDDAJSQzAeFw0yMjAxMTgxNTI5MDlaFw0yNTAxMDIxNTI5MDlaMBEx
	DzANBgNVBAMMBnNlcnZlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
	ALO11A8kWswZLCsx+Exuv8iwBgIL19ZHIDJF7l9tj5fkzmmXRPihDGMlB1sKr+P3
	wI41a66klPGYACl1SEwrzJ+nHMhLKycZC0zGZVGlq/g3o19p8N16SbdJwM1Myb3r
	DgIfX14s0yEHF1x3h2OULrNqBxH+PBwGgJqgnmdO5XHdPN913/duXCJ8WU6g0YCQ
	eVADfCJFkBTWd+/TfIwLBfHEGTf70wsi6XJnypg7krA/LKYfi33UO1/+UxlLw9HL
	zs+R2z2h2QsYZDewru/C4RcW/KAEZTCcA6Tl2ShXA+22ujFuoR9UWkX2FgEHiUkS
	gA1M4WOwpQOD5IKkFJwlUxsCAwEAAaOBrDCBqTAJBgNVHRMEAjAAMB0GA1UdDgQW
	BBQ6wjt77hd0oGGppTLUdB0zEJto2TBIBgNVHSMEQTA/gBRXiYfyS/HcKm+U4xCk
	t8iNA2PIgKERpA8wDTELMAkGA1UEAwwCUkOCFCzyJEJyUvqyWF/C6afXwRlcZrPc
	MBMGA1UdJQQMMAoGCCsGAQUFBwMBMAsGA1UdDwQEAwIFoDARBgNVHREECjAIggZz
	ZXJ2ZXIwDQYJKoZIhvcNAQELBQADggEBAHpg0dO5L5uPc4+hsfDRTh9KdnS3xDBA
	L7dFkuc6aOVCMM3joXS/OffjTvD4Il51U1PUvKI9R91FqURd5W9P/XY5mzGZ8/fF
	dV4Lwfn6cBusMFKNl8qB2GwueWYvJ03Y/HWvReC9/MNXMhe+3ZymbCzgxUtairQL
	a+GtORd2+dMmazF2DVQyHprUK4fZsOUT8Jc4dPUNeLBu0yswQy07JlpvGUIluYBg
	oLxq3K7OdckjNKrD++PLbOV6SxjLcKekGTz8Fu91WfQt9WzjcJ4yTd8TE2CpnpPV
	1QaJrcUs7j7rkxvKwzExFRerJJDnPl/Cz0KyoaywJof7P6Anrs3F4U0=
	-----END CERTIFICATE-----
	}
    }
    custom-config {
	custom-config-id service:UserDefined:server.conf
	custom-command server.conf
	config {
	# OpenVPN server configuration
	
	# Which local IP address should OpenVPN
	# listen on?
	local #TODO
	
	# Configure server mode and supply a VPN subnet
	# for OpenVPN to draw client addresses from.
	# The server will take 10.0.200.1 for itself,
	# the rest will be made available to clients.
	# Each client will be able to reach the server
	# on 10.0.200.1. Comment this line out if you are
	# ethernet bridging. See the man page for more info.
	server 10.0.200.0 255.255.255.0
	
	# The keepalive directive causes ping-like
	# messages to be sent back and forth over
	# the link so that each side knows when
	# the other side has gone down.
	# Ping every 10 seconds, assume that remote
	# peer is down if no ping received during
	# a 120 second time period.
	keepalive 10 120
	
	# SSL/TLS root certificate (ca), certificate
	# (cert), and private key (key).  Each client
	# and the server must have their own cert and
	# key file.  The server and all clients will
	# use the same ca file.
	#
	# See the "easy-rsa" directory for a series
	# of scripts for generating RSA certificates
	# and private keys.  Remember to use
	# a unique Common Name for the server
	# and each of the client certificates.
	#
	# Any X509 key management system can be used.
	# OpenVPN can also use a PKCS #12 formatted key file
	# (see "pkcs12" directive in man page).
	ca ca.crt
	cert server.crt
	key server.key
	
	# Diffie hellman parameters.
	dh dh.pem
	
	# Select a cryptographic cipher.
	# This config item must be copied to
	# the client config file as well.
	# Note that v2.4 client/server will automatically
	# negotiate AES-256-GCM in TLS mode.
	# See also the ncp-cipher option in the manpage
	cipher AES-256-CBC
		
	# By default, log messages will go to the syslog (or
	# on Windows, if running as a service, they will go to
	# the "\Program Files\OpenVPN\log" directory).
	# Use log or log-append to override this default.
	# "log" will truncate the log file on OpenVPN startup,
	# while "log-append" will append to it.  Use one
	# or the other (but not both).
	log server.log
	
	# Which TCP/UDP port should OpenVPN listen on?
	# If you want to run multiple OpenVPN instances
	# on the same machine, use a different port
	# number for each one.  You will need to
	# open up this port on your firewall.
	port #TODO
	
	# TCP or UDP server?
	proto #TODO
	
	# "dev tun" will create a routed IP tunnel,
	# "dev tap" will create an ethernet tunnel.
	# Use "dev tap0" if you are ethernet bridging
	# and have precreated a tap0 virtual interface
	# and bridged it with your ethernet interface.
	# If you want to control access policies
	# over the VPN, you must create firewall
	# rules for the the TUN/TAP interface.
	# On non-Windows systems, you can give
	# an explicit unit number, such as tun0.
	# On Windows, use "dev-node" for this.
	# On most systems, the VPN will not function
	# unless you partially or fully disable
	# the firewall for the TUN/TAP interface.
	dev tun
	
	# Set the appropriate level of log
	# file verbosity.
	#
	# 0 is silent, except for fatal errors
	# 4 is reasonable for general usage
	# 5 and 6 can help to debug connection problems
	# 9 is extremely verbose
	verb 6
	}
    }
    custom-config {
	custom-config-id service:UserDefined:server.key
	custom-command server.key
	config {
	-----BEGIN PRIVATE KEY-----
	MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCztdQPJFrMGSwr
	MfhMbr/IsAYCC9fWRyAyRe5fbY+X5M5pl0T4oQxjJQdbCq/j98CONWuupJTxmAAp
	dUhMK8yfpxzISysnGQtMxmVRpav4N6NfafDdekm3ScDNTMm96w4CH19eLNMhBxdc
	d4djlC6zagcR/jwcBoCaoJ5nTuVx3Tzfdd/3blwifFlOoNGAkHlQA3wiRZAU1nfv
	03yMCwXxxBk3+9MLIulyZ8qYO5KwPyymH4t91Dtf/lMZS8PRy87Pkds9odkLGGQ3
	sK7vwuEXFvygBGUwnAOk5dkoVwPttroxbqEfVFpF9hYBB4lJEoANTOFjsKUDg+SC
	pBScJVMbAgMBAAECggEBAICPv5jlhR8lkveD1AG56PGFG4czOcFNOLc+V/1kv6kG
	QrQ/R1QmwlnbD5wN1S7c+p/Bj7tsejErcFI4WPRFESnVvz16qPBbdj4CYFE8l/4G
	r5V+kJWg+kNpO8ii+mAnW+ogz3Tr1E54aDn6OJ0AUTiAzXYNzqqt7CqyZR+6zWHa
	lMgukOAVhW5/+CrgqfOALxe3fuKEyAVzT0W1kdmqVEoooHaAxV6hHE1XmOpl41Ec
	mL4SnzA4hTif4rGfnDz95+JBK/nEGmaC85J/6wx2gTDJccAEZETadTSeaOM4wgdK
	az+FId1lzQCSR+02Q40Ox4/Mu82FettN5boSKHzrskECgYEA3BPanNcxEbONiFOP
	mermR5K0SUtfwCOBlbFlhvKJ6JL0eFnu/1wiBRvDAjtsRIyoqQSJuYugdgZ+Bydh
	p4DXW5RZdZcC8m3IvEfB+zJsM3uc4ehvDzkKeoWIpwiPjdxWu6CP6mPHNyNOfxNY
	AygGhCrbVz/lQUmsomF4xx+8dwMCgYEA0QswimakZP32fWam9JjR8+36qL+usXZN
	2NMkKRrvGJWglxDCLLCE0XnlVS7tlutNxeeLvpRPCuhK4IALRvJkk+eg5Q5YBoKX
	kUexYrT3BtqmJOMZ3cS6seer1md/GDzyE295CSWzeijLwXpPDCZoMZ8bDQV+a1ge
	lfpWE1P7DAkCgYBp0AnuGvD2x9Om1jZXFL+/bePM0bap1Oh7Jp3f8kEoV2+/Zc4p
	bQzWU/DA4/08QDzfdtUZJu7xkFGL8v1a4fGpkHwqs36xPOOk0wOLWUT4w9g8Ldso
	AI7vNcDsPot285eoApzvXyXrdshJBO3uJpJrfYeUPZ5mc5vTPvYpFzMwLQKBgHH7
	7vjYZPVogTn5ejnPBlRCxDW1ZzT+tA3xezsqo4q9M7aLfcVObu2l0MW08/ohzeOG
	kO1XAw6IgSOOzhdeXjdDyrh7LMZH+QtPk0qmMDg9ivB8IIOLHN2a3FjpUCTQPpMY
	al/xfb6zdf7GiUmvu4qrHd3oy/kOMIdI3Bxn43C5AoGAWag83HZx2HZBnUKJWbkQ
	I5OssynX55udg0g4s08pA+eUYSSAXsWkO1y3DhFo8OeZRjHgjc5kAjwQYEcTyC8h
	VwiNc7CrLkhlOMOxvTrBg0DQpL5vrwUAdZFE6R9zj7MX//zdf6luzwPMKjCBmChj
	PShaRDZk/FfFZzoJimMa790=
	-----END PRIVATE KEY-----
	}
    }
    services {IPForward DefaultRoute SSH UserDefined}
}

node n6 {
    type router
    model PC
    network-config {
	hostname laptop
	!
	interface eth0
	 ip address 10.0.0.20/24
	 ipv6 address 2001:0::20/64
	!
    }
    canvas c1
    iconcoords {94.0 220.0}
    labelcoords {92.0 264.0}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('client.key', 'client.crt', 'client.conf', 'ca.crt', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:ca.crt
	custom-command ca.crt
	config {
	-----BEGIN CERTIFICATE-----
	MIIDMDCCAhigAwIBAgIULPIkQnJS+rJYX8Lpp9fBGVxms9wwDQYJKoZIhvcNAQEL
	BQAwDTELMAkGA1UEAwwCUkMwHhcNMjIwMTE4MTUyMzU3WhcNMzIwMTE2MTUyMzU3
	WjANMQswCQYDVQQDDAJSQzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
	ALcd3pZmF/7K4I8x6urc9+n/7DyP2JJhfPhH7vxeKKXSZ76lgpGvgTwyPFS3ORSR
	w4kZD7EsdnRGv+fOAIw76Cw+pue0oEAWb5yotlAYhGKeD5gbR4OQmQmk02VpnfWe
	Rs4jmRUB2PgOdA8ZWo6HXs4ZV6ULzR4ZybPGH0Hmty/+ljea1yzg7WodrYJ7C3Oz
	l3tfhZ3lVFzkk78E3oFg/DIaY5dNE3JXrugX9VPmU2XGPziUc/4Oc+QszSYElI9k
	eKv6DZ2Thbh/jRT04Du+0VYcUqtAYjDOT/XQT30Ef6HYxsKKsWP28H0t99ff1gbg
	bw8XA5QBmfPGLs2NwWzmf90CAwEAAaOBhzCBhDAdBgNVHQ4EFgQUV4mH8kvx3Cpv
	lOMQpLfIjQNjyIAwSAYDVR0jBEEwP4AUV4mH8kvx3CpvlOMQpLfIjQNjyIChEaQP
	MA0xCzAJBgNVBAMMAlJDghQs8iRCclL6slhfwumn18EZXGaz3DAMBgNVHRMEBTAD
	AQH/MAsGA1UdDwQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAQEAhpUxODAGxJlFA38b
	tExM+NkhqSK9j7IIdA07hFAvzhPDx5wsg6zbqu10kyeW5l4m0eisdReau9Jwtf54
	RHLBrjofYZCeResG9iEHCQ7jEzokrpVADzvcXBjXRkTFKK1dm8SjyI81seBD3DPr
	RR2yx8IAvVSso7G08724A6OhbFMwZCTWQNBdk2GJlFzMYvjisCcieYqR1PMV0s7B
	QPMVd+lcDAJny8iTb9SBh6GLB7uszPA1k23dpOMIx/P/cs66pC2x3FIJnCljcmDT
	YdbD7/4NQ6NsUQTCHzh8fQ8OX+h2b8g/NKYPxmdnIhooQ7N9n7ZG74/u13WokGF0
	bCDtew==
	-----END CERTIFICATE-----
	}
    }
    custom-config {
	custom-config-id service:UserDefined:client.key
	custom-command client.key
	config {
	-----BEGIN PRIVATE KEY-----
	MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCwoeBajPlXPvLW
	Lf2fHH5YF+xYjNeMNKR9ve75zGIAWs3YkylNKQVd6hT42DILelDVzwCZz1ZoDBpQ
	/HKQP6uELB/khQppK6x/s0RfBjX5FW+PDXFFoPnYYIlenTER49SHDZRMteg0QoRL
	Hc0+BLsNlhAwEDB0hvf8n59amihuhVIMEgog8cSsLCZqxyulcvXDo17Z0nrWBIIB
	HBjykesDGYWniGhaqkpsC+vSCN9sGe2J+OtNUPgsSBA+sS/PMTeUgjKiztWXBPC3
	3iKyiASWeK8CUI8/hPG0vD/i7WUAhAs7nL/XE7yOnSLLSWqzz2ThWJiCEAhrzHD+
	GQQjKhkbAgMBAAECggEADFgDudBITJSVm+oy4z+2hKmHVtjg52d2Z2MypDpoTuYJ
	pK0EIeRP/7QwKwPQ24R8ybRhsl4PB85wuGAsEXChp+b9g5bYl2j58SKyEIH6m6Gn
	3jNuSxNo4no8n2QU3c8yNw334zSDOcO8QxOeGEt0Vwq5ruIywLH9+qWdGVPUp4SD
	5vSe1Q6LMo0WqxeWUwP+7Hx/dsEpwuVLAS/tETjjN1YceFBOFYDxSUIPpLcb4+0v
	ZkQHarJbyXMW+LjK22ckTwqNjzfMcawKFcFyeZKx9DaLoWEZX3H6nUvxKpg5YijB
	ioFbO3dYiloBFybnAFlWwuUrIGVabZrF/ARCPMYAAQKBgQDgxRvYcylgJ9fMZR8/
	OPo7InbiKleqe/DWJlMPgacMI07V8r9h5OGLMikWdblToWMtwlzNbwj9R/QxMK7I
	G3Exf+PYY1SsCu9o0QJj5H2T6sxRh34G8W4iLsVxi3rCORPY2ee6X5mGRxX5RODh
	W6zmJ12KQKw80XNgl+Vy4j9gAQKBgQDJLIzJnrnYfoAa9lON7VkYga5j6OerO/JA
	ZbBRJXYjDcZy+vJA7+nnkjypm24kjStFvD05cKCaUNO8aQUckW41lMtCOc/QCF41
	TNZd01dg233efXbvHyxiAlsOXhPWvXsrRLQHqBLq1no5yCQ5WB2gQCIRvsq1TZew
	jPqm4hr5GwKBgHK+LOjiYUzlChUdykXMIHHvtiDe3MH7Y4bvKZfQ6CYaIDS4J1si
	LMGSacc9cc5vpOHHRvjYpg4mnVI/N/qPh8ltMDNXAfKR4oXvrPixvCm2w3cbZArH
	VSG+Hq1INvLPkIIzO0i5ZPZXc7A8qVBiLHGRxv685TBm/C9jW466UQABAoGBAKyf
	mb94gCiRhAOe01u6CvXIcYgx1nlM2zb/CyjWaGTz8RHA3Bd0xtV62qr/QKgEqtkQ
	Cck8J9PC/61wwH4fHN7FaxTM3tG4HH7IDDo+m3/1WDCOoHvX2BHRy6iseYGO3h3m
	ukTHqFPy7raeUtcSEXntDk8D1JV2m29Xyc1hv5t5AoGBANkzMoEKwX9gQHWqV7YU
	Jb70n1cnGtEu3dsLFwpAQlc1hFt4zsnCHjjtHkGswcgn6/SgVyWvhnW0Mtr9acnD
	uLiFUtMrJwVzmQfSp+vdKp+yb4dnm7/HRT52zjCRrLeyhZHbH4fBo9X6YkFnbT9P
	VAN9HQz6SWBibjBgFjN3YZwR
	-----END PRIVATE KEY-----
	}
    }
    custom-config {
	custom-config-id service:UserDefined:client.crt
	custom-command client.crt
	config {
	Certificate:
		Data:
			Version: 3 (0x2)
			Serial Number:
				9a:25:94:ab:e6:fe:10:49:8c:b6:01:9f:15:73:27:9b
			Signature Algorithm: sha256WithRSAEncryption
			Issuer: CN=RC
			Validity
				Not Before: Jan 18 15:30:43 2022 GMT
				Not After : Jan  2 15:30:43 2025 GMT
			Subject: CN=laptop
			Subject Public Key Info:
				Public Key Algorithm: rsaEncryption
					RSA Public-Key: (2048 bit)
					Modulus:
						00:b0:a1:e0:5a:8c:f9:57:3e:f2:d6:2d:fd:9f:1c:
						7e:58:17:ec:58:8c:d7:8c:34:a4:7d:bd:ee:f9:cc:
						62:00:5a:cd:d8:93:29:4d:29:05:5d:ea:14:f8:d8:
						32:0b:7a:50:d5:cf:00:99:cf:56:68:0c:1a:50:fc:
						72:90:3f:ab:84:2c:1f:e4:85:0a:69:2b:ac:7f:b3:
						44:5f:06:35:f9:15:6f:8f:0d:71:45:a0:f9:d8:60:
						89:5e:9d:31:11:e3:d4:87:0d:94:4c:b5:e8:34:42:
						84:4b:1d:cd:3e:04:bb:0d:96:10:30:10:30:74:86:
						f7:fc:9f:9f:5a:9a:28:6e:85:52:0c:12:0a:20:f1:
						c4:ac:2c:26:6a:c7:2b:a5:72:f5:c3:a3:5e:d9:d2:
						7a:d6:04:82:01:1c:18:f2:91:eb:03:19:85:a7:88:
						68:5a:aa:4a:6c:0b:eb:d2:08:df:6c:19:ed:89:f8:
						eb:4d:50:f8:2c:48:10:3e:b1:2f:cf:31:37:94:82:
						32:a2:ce:d5:97:04:f0:b7:de:22:b2:88:04:96:78:
						af:02:50:8f:3f:84:f1:b4:bc:3f:e2:ed:65:00:84:
						0b:3b:9c:bf:d7:13:bc:8e:9d:22:cb:49:6a:b3:cf:
						64:e1:58:98:82:10:08:6b:cc:70:fe:19:04:23:2a:
						19:1b
					Exponent: 65537 (0x10001)
			X509v3 extensions:
				X509v3 Basic Constraints: 
					CA:FALSE
				X509v3 Subject Key Identifier: 
					80:E4:8F:34:0F:68:51:ED:EF:C9:CB:FA:B4:10:D6:C8:E5:CE:55:1F
				X509v3 Authority Key Identifier: 
					keyid:57:89:87:F2:4B:F1:DC:2A:6F:94:E3:10:A4:B7:C8:8D:03:63:C8:80
					DirName:/CN=RC
					serial:2C:F2:24:42:72:52:FA:B2:58:5F:C2:E9:A7:D7:C1:19:5C:66:B3:DC
	
				X509v3 Extended Key Usage: 
					TLS Web Client Authentication
				X509v3 Key Usage: 
					Digital Signature
		Signature Algorithm: sha256WithRSAEncryption
			2e:73:82:0a:be:78:c1:dc:16:62:d4:0b:3f:3a:c6:5c:aa:18:
			53:10:fa:cb:91:1c:38:a9:80:82:c1:9f:8b:e6:9e:81:04:84:
			01:93:87:b6:4e:86:7c:de:c7:3c:e9:94:c6:92:0d:46:16:06:
			e2:ae:e6:ed:b8:62:5c:22:b6:9d:b8:35:4c:08:3e:7d:ec:31:
			9c:83:65:d2:65:62:0a:dd:24:9a:f2:81:3c:51:e2:25:b3:a9:
			d7:93:4b:2c:f8:d5:f2:98:c8:8f:83:db:b5:f9:3d:b4:f3:2a:
			9f:dd:2c:95:fa:bc:87:24:77:0e:a9:e0:98:ec:ad:b1:05:18:
			05:10:94:63:cd:f7:13:2e:ed:34:6b:5e:1b:24:07:77:9d:f2:
			af:ab:3d:57:59:1b:cb:b9:ce:cd:35:29:07:d2:8a:79:88:75:
			bf:d0:31:cc:db:70:6b:f1:1f:da:4c:02:fa:f5:4b:07:95:74:
			fb:bf:68:a7:4d:0f:08:24:35:51:b3:0c:7a:47:15:54:59:ca:
			1e:b0:07:74:6d:1a:98:a8:4d:4b:02:b0:81:4f:fc:1f:c2:b5:
			f7:14:c9:81:22:6f:a0:f0:cc:39:b5:25:b3:36:80:02:12:3a:
			5d:9f:5c:6a:83:18:ec:47:4d:6f:84:64:1e:cc:f5:12:18:a5:
			73:b4:d6:d0
	-----BEGIN CERTIFICATE-----
	MIIDQzCCAiugAwIBAgIRAJollKvm/hBJjLYBnxVzJ5swDQYJKoZIhvcNAQELBQAw
	DTELMAkGA1UEAwwCUkMwHhcNMjIwMTE4MTUzMDQzWhcNMjUwMTAyMTUzMDQzWjAR
	MQ8wDQYDVQQDDAZsYXB0b3AwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
	AQCwoeBajPlXPvLWLf2fHH5YF+xYjNeMNKR9ve75zGIAWs3YkylNKQVd6hT42DIL
	elDVzwCZz1ZoDBpQ/HKQP6uELB/khQppK6x/s0RfBjX5FW+PDXFFoPnYYIlenTER
	49SHDZRMteg0QoRLHc0+BLsNlhAwEDB0hvf8n59amihuhVIMEgog8cSsLCZqxyul
	cvXDo17Z0nrWBIIBHBjykesDGYWniGhaqkpsC+vSCN9sGe2J+OtNUPgsSBA+sS/P
	MTeUgjKiztWXBPC33iKyiASWeK8CUI8/hPG0vD/i7WUAhAs7nL/XE7yOnSLLSWqz
	z2ThWJiCEAhrzHD+GQQjKhkbAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4E
	FgQUgOSPNA9oUe3vycv6tBDWyOXOVR8wSAYDVR0jBEEwP4AUV4mH8kvx3CpvlOMQ
	pLfIjQNjyIChEaQPMA0xCzAJBgNVBAMMAlJDghQs8iRCclL6slhfwumn18EZXGaz
	3DATBgNVHSUEDDAKBggrBgEFBQcDAjALBgNVHQ8EBAMCB4AwDQYJKoZIhvcNAQEL
	BQADggEBAC5zggq+eMHcFmLUCz86xlyqGFMQ+suRHDipgILBn4vmnoEEhAGTh7ZO
	hnzexzzplMaSDUYWBuKu5u24Ylwitp24NUwIPn3sMZyDZdJlYgrdJJrygTxR4iWz
	qdeTSyz41fKYyI+D27X5PbTzKp/dLJX6vIckdw6p4JjsrbEFGAUQlGPN9xMu7TRr
	XhskB3ed8q+rPVdZG8u5zs01KQfSinmIdb/QMczbcGvxH9pMAvr1SweVdPu/aKdN
	DwgkNVGzDHpHFVRZyh6wB3RtGpioTUsCsIFP/B/CtfcUyYEib6DwzDm1JbM2gAIS
	Ol2fXGqDGOxHTW+EZB7M9RIYpXO01tA=
	-----END CERTIFICATE-----
	}
    }
    custom-config {
	custom-config-id service:UserDefined:client.conf
	custom-command client.conf
	config {
	# OpenVPN client configuration
	
	# Specify that we are a client and that we
	# will be pulling certain config file directives
	# from the server.
	client
	
	# Use the same setting as you are using on
	# the server.
	# On most systems, the VPN will not function
	# unless you partially or fully disable
	# the firewall for the TUN/TAP interface.
	dev tun
	
	# Are we connecting to a TCP or
	# UDP server?  Use the same setting as
	# on the server.
	proto udp
	
	# The hostname/IP and port of the server.
	# You can have multiple remote entries
	# to load balance between the servers.
	remote #TODO
	
	# Most clients don't need to bind to
	# a specific local port number.
	nobind
	
	# SSL/TLS parms.
	# See the server config file for more
	# description.  It's best to use
	# a separate .crt/.key file pair
	# for each client.  A single ca
	# file can be used for all clients.
	ca ca.crt
	cert client.crt
	key client.key
	
	# Select a cryptographic cipher.
	# If the cipher option is used on the server
	# then you must also specify it here.
	# Note that v2.4 client/server will automatically
	# negotiate AES-256-GCM in TLS mode.
	# See also the data-ciphers option in the manpage
	cipher AES-256-CBC
	
	# By default, log messages will go to the syslog (or
	# on Windows, if running as a service, they will go to
	# the "\Program Files\OpenVPN\log" directory).
	# Use log or log-append to override this default.
	# "log" will truncate the log file on OpenVPN startup,
	# while "log-append" will append to it.  Use one
	# or the other (but not both).
	log client.log
	
	# Set log file verbosity.
	verb 6
	}
    }
    services {DefaultRoute UserDefined}
    interface-peer {eth0 n8}
}

node n7 {
    type lanswitch
    network-config {
	hostname 
	!
    }
    canvas c1
    iconcoords {864.0 530.0}
    labelcoords {864.0 554.0}
    interface-peer {e0 n5}
    interface-peer {e4 n11}
}

node n11 {
    type router
    model host
    network-config {
	hostname desktop
	!
	interface eth0
	 ip address 10.0.6.10/24
	 ipv6 address 2001:6::11/64
	!
    }
    canvas c1
    iconcoords {797.0 414.0}
    labelcoords {797.0 389.0}
    interface-peer {eth0 n7}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('index.html', )
	cmdup=('python3 -m http.server --bind 0.0.0.0 8080', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:index.html
	custom-command index.html
	config {
	<!DOCTYPE html>
	<html>
	<head>
	    <meta charset='utf-8'>
	    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
	    <title>Home Server</title>
	    <meta name='viewport' content='width=device-width, initial-scale=1'>
	</head>
	<body>
	    <h1 style="text-align: center;"><strong>Private Server</strong></h1>
	    <p>If you are reading this, you have successfully been granted access to the server.</p>
	</body>
	</html>
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n8 {
    type lanswitch
    network-config {
	hostname 
	!
    }
    canvas c1
    iconcoords {203.0 128.0}
    labelcoords {205.0 157.0}
    interface-peer {e0 n1}
    interface-peer {e1 n6}
}

link l2 {
    nodes {n4 n5}
    bandwidth 0
}

link l3 {
    nodes {n1 n2}
    bandwidth 0
}

link l4 {
    nodes {n3 n4}
    bandwidth 0
}

link l7 {
    nodes {n5 n7}
    bandwidth 0
}

link l11 {
    nodes {n7 n11}
    bandwidth 0
}

link l1 {
    nodes {n1 n8}
    bandwidth 0
}

link l8 {
    nodes {n8 n6}
    bandwidth 0
}

link l9 {
    nodes {n2 n3}
    bandwidth 0
}

annotation a1 {
    iconcoords {523.0 358.0 932.0 666.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #c0c0ff
    width 0
    border black
    rad 25
    canvas c1
}

annotation a2 {
    iconcoords {35.0 74.0 356.0 291.0}
    type rectangle
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    color #69d0a4
    width 0
    border black
    rad 25
    canvas c1
}

annotation a3 {
    iconcoords {863.0 637.0}
    type text
    label {home}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a4 {
    iconcoords {289.0 103.0}
    type text
    label {office}
    labelcolor black
    fontfamily {Arial}
    fontsize {12}
    effects {bold}
    canvas c1
}

annotation a5 {
    type text
    iconcoords {921.0 206.0}
    label {}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

